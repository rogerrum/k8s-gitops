grafana:
  image:
    repository: grafana/grafana
    tag: 9.2.2
  # tolerations:
  # - key: "arm"
  #   operator: "Exists"
  deploymentStrategy:
    type: Recreate
  podAnnotations:
    backup.velero.io/backup-volumes: storage
    configmap.reloader.stakater.com/reload: "grafana"
  persistence:
    enabled: true
    storageClassName: "longhorn"
    size: 10Gi
    accessModes:
      - ReadWriteOnce
  env:
    GF_EXPLORE_ENABLED: true
#    GF_DISABLE_SANITIZE_HTML: true
#    GF_PANELS_DISABLE_SANITIZE_HTML: true
    GF_SECURITY_ALLOW_EMBEDDING: true
    GF_LOG_FILTERS: rendering:debug
    GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: "panodata-map-panel"
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: "nginx"
      cert-manager.io/cluster-issuer: vault-issuer
      cert-manager.io/common-name: grafana.rsr.net
    hosts: [ grafana.rsr.net ]
    tls:
      - hosts:
          - grafana.rsr.net
        secretName: grafana-cert-tls
  plugins:
    - natel-discrete-panel
    - pr0ps-trackmap-panel
    - grafana-piechart-panel
    - grafana-clock-panel
    - vonage-status-panel
    - grafana-worldmap-panel
    - https://github.com/panodata/panodata-map-panel/releases/download/0.16.0/panodata-map-panel-0.16.0.zip;grafana-map-panel
  serviceMonitor:
    enabled: true
  serviceAccount:
    autoMount: true
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          allowUiUpdates: true
          options:
            path: /var/lib/grafana/dashboards/default
  dashboards:
    default:
      1-node-exporter:
        url: https://grafana.com/api/dashboards/11074/revisions/9/download
        datasource: Prometheus
      blocky:
        url: https://raw.githubusercontent.com/0xERR0R/blocky/v0.16/docs/blocky-grafana.json
        datasource: Prometheus
      argo-cd:
        url: https://raw.githubusercontent.com/argoproj/argo-cd/v1.8.6/examples/dashboard.json
        datasource: Prometheus
      frigate:
        url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/frigate.json
        datasource: influxdb
      home-assistant:
        url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/home_assistant.json
        datasource: home_assistant
      internet-speed:
        gnetId: 13665
        revision: 1
        datasource: Prometheus
      minio-overview:
        url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/minio_overview.json
        datasource: Prometheus
      nginx-dashboard:
        url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
        datasource: Prometheus
      node-exporter-full:
        gnetId: 1860
        revision: 23
        datasource: Prometheus
      prometheus-exporter-summary:
        url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/prometheus_exporter_summary.json
        datasource: Prometheus
      TrueNAS:
        url: https://grafana.com/api/dashboards/12921/revisions/1/download
        datasource: TrueNAS
      # Ref: https://grafana.com/grafana/dashboards/11315
      unifi-client-insights:
        gnetId: 11315
        revision: 8
        datasource: Prometheus
      # Ref: https://grafana.com/grafana/dashboards/11311
      unifi-network-sites:
        gnetId: 11311
        revision: 4
        datasource: Prometheus
      # Ref: https://grafana.com/grafana/dashboards/11314
      unifi-uap-insights:
        gnetId: 11314
        revision: 9
        datasource: Prometheus
      # Ref: https://grafana.com/grafana/dashboards/11312
      unifi-usw-insights:
        gnetId: 11312
        revision: 8
        datasource: Prometheus
      # Ref: https://grafana.com/grafana/dashboards/11313
      unifi-usg-insights:
        gnetId: 11313
        revision: 8
        datasource: Prometheus
      ups:
        url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/ups.json
        datasource: Prometheus
      cloudnative-pg:
        url: https://raw.githubusercontent.com/cloudnative-pg/charts/main/charts/cnpg-sandbox/dashboard.json
        datasource: Prometheus
  sidecar:
    datasources:
      enabled: true
      searchNamespace: ALL
      # defaultDatasourceEnabled: false
    dashboards:
      enabled: true
      searchNamespace: ALL
  datasources:
    datasources.yaml:
      apiVersion: 1
      # list of datasources that should be deleted from the database
      deleteDatasources:
        - name: Loki
          orgId: 1
      datasources:
        - name: Prometheus
          type: prometheus
          access: proxy
          url: http://thanos-query:9090/
          isDefault: true
        - name: loki
          type: loki
          access: proxy
          url: http://loki.logs.svc.cluster.local:3100
        - name: influxdb
          type: influxdb
          access: proxy
          url: http://influxdb:8086
          database: telegraf
        - name: home_assistant
          type: influxdb
          access: proxy
          url: http://influxdb:8086
          database: home_assistant
        - name: speedtests
          type: influxdb
          access: proxy
          url: http://influxdb:8086
          database: speedtests
  #        - name: TrueNAS
  #          type: influxdb
  #          access: proxy
  #          url: http://influxdb:8086
  #          database: graphitedb
  grafana.ini:
    server:
      root_url: "https://grafana.rsr.net"
    # security:
    #   admin_user: roger@?.com
    paths:
      data: /var/lib/grafana/data
      logs: /var/log/grafana
      plugins: /var/lib/grafana/plugins
      provisioning: /etc/grafana/provisioning
    analytics:
      check_for_updates: false
    log:
      mode: console
    grafana_net:
      url: https://grafana.net
    auth.basic:
      disable_login_form: true

    auth.generic_oauth:
      enabled: true
      allow_sign_up: true
      team_ids:
      allowed_organizations:
      name: Auth0
      client_id: $__file{/etc/secrets/auth_generic_oauth/client_id}
      client_secret: $__file{/etc/secrets/auth_generic_oauth/client_secret}
      scopes: openid profile email
      auth_url: https://rogerrum.us.auth0.com/authorize
      token_url: https://rogerrum.us.auth0.com/oauth/token
      api_url: https://rogerrum.us.auth0.com/userinfo

  admin:
    existingSecret: grafana-secret

  extraSecretMounts:
    - name: auth-generic-oauth-secret-mount
      secretName: grafana-secret
      defaultMode: 0440
      mountPath: /etc/secrets/auth_generic_oauth
      readOnly: true
