grafana:
  extraInitContainers:
    - name: init-db
      image: ghcr.io/onedr0p/postgres-initdb:14.7
      imagePullPolicy: IfNotPresent
      envFrom:
        - secretRef:
            name: grafana-secret

  rbac:
    pspEnabled: false

  # tolerations:
  # - key: "arm"
  #   operator: "Exists"
  deploymentStrategy:
    type: Recreate
  podAnnotations:
    configmap.reloader.stakater.com/reload: "grafana"
  env:
    GF_ANALYTICS_CHECK_FOR_UPDATES: false
    GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
    GF_EXPLORE_ENABLED: true
    GF_GRAFANA_NET_URL: https://grafana.net
    GF_LOG_FILTERS: rendering:debug
    GF_LOG_MODE: console
    GF_PANELS_DISABLE_SANITIZE_HTML: true
    GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel
    GF_SECURITY_ALLOW_EMBEDDING: true
    # GF_SECURITY_DISABLE_INITIAL_ADMIN_CREATION: true
    GF_SERVER_ROOT_URL: https://grafana.rsr.net
  envFromSecrets:
    - name: grafana-secret

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: "nginx"
      cert-manager.io/issuer: step-issuer
      cert-manager.io/issuer-kind: StepClusterIssuer
      cert-manager.io/issuer-group: certmanager.step.sm
      cert-manager.io/revision-history-limit: "3"
      cert-manager.io/duration: "2160h"
      cert-manager.io/renew-before: "720h"


    hosts: [ grafana.rsr.net ]
    tls:
      - hosts:
          - grafana.rsr.net
        secretName: grafana-cert-tls
  plugins:
    - pr0ps-trackmap-panel
    - natel-plotly-panel
    - vonage-status-panel
    - grafana-piechart-panel
    - https://github.com/panodata/panodata-map-panel/releases/download/0.16.0/panodata-map-panel-0.16.0.zip;grafana-worldmap-panel-ng
    - grafana-clock-panel
    - grafana-worldmap-panel
    - natel-discrete-panel
  serviceMonitor:
    enabled: true
  serviceAccount:
    autoMount: true
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          allowUiUpdates: true
          options:
            path: /var/lib/grafana/dashboards/default
  dashboards:
    default:
      1-node-exporter:
        url: https://grafana.com/api/dashboards/11074/revisions/9/download
        datasource: Prometheus
      blocky:
        url: https://raw.githubusercontent.com/0xERR0R/blocky/v0.16/docs/blocky-grafana.json
        datasource: Prometheus
      cert-manager:
        url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
        datasource: Prometheus
      cloudnative-pg:
        url: https://raw.githubusercontent.com/cloudnative-pg/cloudnative-pg/main/docs/src/samples/monitoring/grafana-dashboard.json
        datasource: Prometheus

      argo-cd:
        url: https://raw.githubusercontent.com/argoproj/argo-cd/v2.6.7/examples/dashboard.json
        datasource: Prometheus
      frigate:
        url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/frigate.json
        datasource: influxdb
      home-assistant:
        url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/home_assistant.json
        datasource: home_assistant
      loki:
        gnetId: 13407
        revision: 1
        datasource: Prometheus
      internet-speed:
        gnetId: 13665
        revision: 1
        datasource: Prometheus
      nginx-dashboard:
        url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
        datasource: Prometheus
      node-exporter-full:
        gnetId: 1860
        revision: 29
        datasource: Prometheus
      prometheus-exporter-summary:
        url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/prometheus_exporter_summary.json
        datasource: Prometheus
      speedtest-exporter:
        url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/speedtest-exporter.json
        datasource: Prometheus
      # Ref: https://grafana.com/grafana/dashboards/11315
      unifi-client-insights:
        gnetId: 11315
        revision: 8
        datasource: Prometheus
      # Ref: https://grafana.com/grafana/dashboards/11311
      unifi-network-sites:
        gnetId: 11311
        revision: 4
        datasource: Prometheus
      # Ref: https://grafana.com/grafana/dashboards/11314
      unifi-uap-insights:
        gnetId: 11314
        revision: 9
        datasource: Prometheus
      # Ref: https://grafana.com/grafana/dashboards/11312
      unifi-usw-insights:
        gnetId: 11312
        revision: 8
        datasource: Prometheus
      # Ref: https://grafana.com/grafana/dashboards/11313
      unifi-usg-insights:
        gnetId: 11313
        revision: 8
        datasource: Prometheus
      ups:
        url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/ups.json
        datasource: Prometheus

  sidecar:
    datasources:
      enabled: true
      searchNamespace: ALL
      # defaultDatasourceEnabled: false
    dashboards:
      enabled: true
      searchNamespace: ALL
  datasources:
    datasources.yaml:
      apiVersion: 1
      # list of datasources that should be deleted from the database
      deleteDatasources:
        - name: Loki
          orgId: 1
      datasources:
        - name: Prometheus
          type: prometheus
          access: proxy
          url: http://thanos-query:9090/
          isDefault: true
        - name: loki
          type: loki
          access: proxy
          url: http://loki-gateway.logs.svc.cluster.local:80
        - name: influxdb
          type: influxdb
          access: proxy
          url: http://influxdb:8086
          database: telegraf
        - name: home_assistant
          type: influxdb
          access: proxy
          url: http://influxdb:8086
          database: home_assistant
        - name: speedtests
          type: influxdb
          access: proxy
          url: http://influxdb:8086
          database: speedtests
  grafana.ini:
    auth:
      oauth_skip_org_role_update_sync: false
    auth.basic:
      disable_login_form: true
    auth.generic_oauth:
      enabled: true
      allow_sign_up: true
      team_ids:
      allowed_organizations:
      name: Auth0
      client_id: # Set by env vars
      client_secret: # Set by env vars
      scopes: openid profile email
      auth_url: https://rogerrum.us.auth0.com/authorize
      token_url: https://rogerrum.us.auth0.com/oauth/token
      api_url: https://rogerrum.us.auth0.com/userinfo
    # ref: https://blog.dahanne.net/2020/04/15/integrating-auth0-oidc-oauth-2-with-authorization-groups-and-roles/
    auth.generic_oauth.group_mapping:
      role_attribute_path: |
        contains("https://rsr.net/groups"[*], 'Admin') && 'Admin' || contains("https://rsr.net/groups"[*], 'Editor') && 'Editor' || 'Viewer'
