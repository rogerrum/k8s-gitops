{
  "extends": [
    "config:base",
    "docker:enableMajor",
    ":disableRateLimiting",
    ":dependencyDashboard",
    ":semanticCommits",
    ":enablePreCommit",
    ":automergeDigest",
    ":automergeBranchPush",
    "docker:pinDigests",
    "github>rogerrum/k8s-gitops//.github/renovate/allowedVersions.json5",
    "github>rogerrum/k8s-gitops//.github/renovate/autoMerge.json5",
    "github>rogerrum/k8s-gitops//.github/renovate/disabledDatasources.json5",
    "github>rogerrum/k8s-gitops//.github/renovate/groups.json5",
  ],
  "enabled": true,
  "timezone": "America/Chicago",
  "semanticCommits": "enabled",
  "platform": "github",
  // "username": "rogerrum",
  "gitAuthor": "Roger Rumao <rogerrum@users.noreply.github.com>",
  "repositories": ["rogerrum/k8s-gitops"],
  "onboarding": false,
  "requireConfig": "optional",
  "commitBodyTable": true,
  "dependencyDashboard": true,
  "dependencyDashboardTitle": "Renovate Dashboard",
  "commitBody": "Signed-off-by: Roger Rumao <rogerrum@users.noreply.github.com>",
  // Do not notify on closed unmerged PRs
  "suppressNotifications": ["prIgnoreNotification"],
  // Do not rebase PRs
  "rebaseWhen": "conflicted",
  "commitMessageTopic": "{{depName}}",
  "commitMessageExtra": "to {{newVersion}}",
  "commitMessageSuffix": "",
  "helm-values": {
    "fileMatch": ["./.+\\.yaml$"]
  },
  "kubernetes": {
    "fileMatch": ["\\.yaml$"],
    "ignorePaths": [
      ".github"
    ],
  },
  "packageRules": [
    // Setup datasources
    {
      "datasources": ["helm"],
      "commitMessageTopic": "Helm chart {{depName}}",
      "semanticCommitScope": "charts",
      "separateMinorPatch": true,
      "ignoreDeprecated": true
    },
    {
      "datasources": ["docker"],
      "commitMessageTopic": "Docker image {{depName}}",
      "commitMessageExtra": "to {{#if isSingleVersion}}{{{toVersion}}}{{else}}{{{newValue}}}{{/if}}",
      "updateTypes": ["major", "minor", "patch"],
      "enabled": true
    },
    {
      "matchDatasources": ["docker"],
      "semanticCommitScope": "images",
      "separateMinorPatch": true
    },
    // add labels according to package and update types
    {
      "matchDatasources": ["docker"],
      "matchUpdateTypes": ["major"],
      "commitMessagePrefix": "feat(images)!: ",
      "labels": ["renovate/image-release", "dependency/major"]
    },
    {
      "matchDatasources": ["docker"],
      "matchUpdateTypes": ["minor"],
      "semanticCommitType": "feat",
      "labels": ["renovate/image-release", "dependency/minor"]
    },
    {
      "matchDatasources": ["docker"],
      "matchUpdateTypes": ["patch"],
      "semanticCommitType": "fix",
      "labels": ["renovate/image-release", "dependency/patch"]
    },
    {
      "matchDatasources": ["helm"],
      "matchUpdateTypes": ["major"],
      "commitMessagePrefix": "feat(charts)!: ",
      "labels": ["renovate/helm-release", "dependency/major"]
    },
    {
      "matchDatasources": ["helm"],
      "matchUpdateTypes": ["minor"],
      "semanticCommitType": "feat",
      "labels": ["renovate/helm-release", "dependency/minor"]
    },
    {
      "matchDatasources": ["helm"],
      "matchUpdateTypes": ["patch"],
      "semanticCommitType": "fix",
      "labels": ["renovate/helm-release", "dependency/patch"]
    },
    // Custom versions
    {
      "matchDatasources": ["docker"],
      "matchPackageNames": ["blakeblackshear/frigate"],
      "versioning": "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-(?<compatibility>.*)$"
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^RELEASE\\.(?<major>\\d+)-(?<minor>\\d+)-(?<patch>\\d+)T.*Z(-(?<compatibility>.*))?$",
      "matchPackageNames": ["quay.io/minio/minio"]
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^RELEASE\\.(?<major>\\d{4})-(?<minor>\\d{2})-(?<patch>\\d{2})",
      "matchPackageNames": ["minio/minio"]
    },
   ],
}
