argo-cd:
  installCRDs: false

  global:
    image:
      repository: argoproj/argocd
      tag: v1.8.7
  dex:
    enabled: false

  repoServer:
    serviceAccount:
      create: true
    rbac:
      - apiGroups:
          - ""
        resources:
          - secrets
          - configmaps
        verbs:
          - create
          - get
          - list
          - watch
          - update
          - patch
          - delete
      - apiGroups:
          - argoproj.io
        resources:
          - applications
          - appprojects
        verbs:
          - create
          - get
          - list
          - watch
          - update
          - delete
          - patch
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true

  server:
    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: vault-issuer
        cert-manager.io/common-name: argo.rsr.net
      hosts:
        - argo.rsr.net
      tls:
        - hosts:
            - "argo.rsr.net"
          secretName: argo-cert-tls
    extraArgs:
      - --insecure
    config:
      repositories: |
        - type: helm
          name: stable
          url: https://charts.helm.sh/stable
        - type: helm
          name: argo-cd
          url: https://argoproj.github.io/argo-helm
        - type: git
          url: https://github.com/rogerrum/k8s-gitops.git
          passwordSecret:
            name: deployment-git-repo-credentials
            key: password
          usernameSecret:
            name: deployment-git-repo-credentials
            key: username
      # Following the guide at https://argoproj.github.io/argo-cd/user-guide/diffing/#system-level-configuration
      resource.customizations: |
        admissionregistration.k8s.io/MutatingWebhookConfiguration:
          ignoreDifferences: |
            jsonPointers:
            - /webhooks/0/clientConfig/caBundle
      configManagementPlugins: |
        - name: secret-to-helm
          init:
            command: ["/bin/sh", "-c"]
            args: ["helm dependency build || true"]
          generate:
            command: ["/bin/sh", "-c"]
            args: ["kubectl -n $SECRET_NAMESPACE  get secrets/$SECRET_NAME -o jsonpath='{.data.values}' | base64 --decode > values-secure.yaml  && helm template . --name-template $ARGOCD_APP_NAME --namespace $ARGOCD_APP_NAMESPACE -f values-secure.yaml --include-crds > all.yaml && kustomize build"]


    metrics:
      enabled: true
      serviceMonitor:
        enabled: true

  controller:
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true

  redis:
    image:
      repository: redis
      tag: 5.0.10-alpine
